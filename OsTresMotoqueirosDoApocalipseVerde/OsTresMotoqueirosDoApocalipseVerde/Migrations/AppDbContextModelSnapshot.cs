// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using OsTresMotoqueirosDoApocalipseVerde.Infraestructure.Context;

#nullable disable

namespace OsTresMotoqueirosDoApocalipseVerde.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("DADOS_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("ENDERECO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("FILIAL_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("FUNCIONARIO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("MODELO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("MOTO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("MOTORISTA_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("PATIO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("SETOR_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence("SITUACAO_SEQ")
                .StartsAt(1000L);

            modelBuilder.Entity("Dados", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_DADOS")
                        .HasDefaultValueSql("DADOS_SEQ.NEXTVAL");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("SENHA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR2(13)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("DADOS", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_ENDERECO")
                        .HasDefaultValueSql("ENDERECO_SEQ.NEXTVAL");

                    b.Property<string>("CodigoPais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CODIGO_PAIS");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CODIGO_POSTAL");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("ESTADO");

                    b.Property<int>("Numero")
                        .HasMaxLength(4)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("RUA");

                    b.HasKey("Id");

                    b.ToTable("ENDERECO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_FILIAL")
                        .HasDefaultValueSql("FILIAL_SEQ.NEXTVAL");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_ENDERECO");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("NOME_FILIAL");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("FILIAL", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Funcionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_FUNC")
                        .HasDefaultValueSql("FUNCIONARIO_SEQ.NEXTVAL");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CARGO");

                    b.Property<long>("DadosId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_DADOS");

                    b.Property<long>("FilialId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("FILIAL_ID");

                    b.Property<long?>("FilialId1")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("Id");

                    b.HasIndex("DadosId")
                        .IsUnique();

                    b.HasIndex("FilialId");

                    b.HasIndex("FilialId1");

                    b.ToTable("FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Modelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_MODELO")
                        .HasDefaultValueSql("MODELO_SEQ.NEXTVAL");

                    b.Property<int>("Consumo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CONSUMO");

                    b.Property<string>("Frenagem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FRENAGEM");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("NVARCHAR2(25)")
                        .HasColumnName("NOME_MODELO");

                    b.Property<string>("SistemaPartida")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("SIS_PARTIDA");

                    b.Property<int>("Tanque")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TANQUE");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO_COMBUSTIVEL");

                    b.HasKey("Id");

                    b.ToTable("MODELO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_MOTO")
                        .HasDefaultValueSql("MOTO_SEQ.NEXTVAL");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVARCHAR2(17)")
                        .HasColumnName("CHASSI");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("CONDICAO");

                    b.Property<string>("LocalizacaoMoto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO_MOTO");

                    b.Property<long>("ModeloId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_MODELO");

                    b.Property<long>("MotoristaId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_MOTORISTA");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)")
                        .HasColumnName("PLACA");

                    b.Property<long>("SetorId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_SETOR");

                    b.Property<long>("SituacaoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_SITUACAO");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId")
                        .IsUnique();

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.HasIndex("SetorId")
                        .IsUnique();

                    b.HasIndex("SituacaoId")
                        .IsUnique();

                    b.ToTable("MOTO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_MOTORISTA")
                        .HasDefaultValueSql("MOTORISTA_SEQ.NEXTVAL");

                    b.Property<long>("DadosId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_DADOS");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PLANO");

                    b.HasKey("Id");

                    b.HasIndex("DadosId")
                        .IsUnique();

                    b.ToTable("MOTORISTA", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Patio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_PATIO")
                        .HasDefaultValueSql("PATIO_SEQ.NEXTVAL");

                    b.Property<int>("CapacidadeMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CAPACIDADE_MOTO");

                    b.Property<long>("FilialId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_FILIAL");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<int>("TotalMotos")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TOTAL_MOTOS");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("PATIO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Setor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_SETOR")
                        .HasDefaultValueSql("SETOR_SEQ.NEXTVAL");

                    b.Property<int>("Capacidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CAPACIDADE_MOTO");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<string>("NomeSetor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)")
                        .HasColumnName("NOME_SETOR");

                    b.Property<long>("PatioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("PATIO_ID");

                    b.Property<long?>("PatioId1")
                        .HasColumnType("NUMBER(19)");

                    b.Property<int>("QtdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QTD_MOTO");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.HasIndex("PatioId1");

                    b.ToTable("SETOR", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Situacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID_SITUACAO")
                        .HasDefaultValueSql("SITUACAO_SEQ.NEXTVAL");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)")
                        .HasColumnName("NOME");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.ToTable("SITUACAO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", b =>
                {
                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Endereco", "Endereco")
                        .WithOne("Filial")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", "EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("Dados", "Dados")
                        .WithOne("Funcionario")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Funcionario", "DadosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("FilialId1");

                    b.Navigation("Dados");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", b =>
                {
                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Modelo", "Modelo")
                        .WithOne("Moto")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", "ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", "Motorista")
                        .WithOne("Moto")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", "MotoristaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Setor", "Setor")
                        .WithOne("Moto")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", "SetorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Situacao", "Situacao")
                        .WithOne("Moto")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", "SituacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modelo");

                    b.Navigation("Motorista");

                    b.Navigation("Setor");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", b =>
                {
                    b.HasOne("Dados", "Dados")
                        .WithOne("Motorista")
                        .HasForeignKey("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", "DadosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dados");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Patio", b =>
                {
                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", "Filial")
                        .WithMany("Patios")
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Setor", b =>
                {
                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Patio", null)
                        .WithMany("Setores")
                        .HasForeignKey("PatioId1");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Dados", b =>
                {
                    b.Navigation("Funcionario")
                        .IsRequired();

                    b.Navigation("Motorista")
                        .IsRequired();
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Endereco", b =>
                {
                    b.Navigation("Filial")
                        .IsRequired();
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Filial", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Patios");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Modelo", b =>
                {
                    b.Navigation("Moto")
                        .IsRequired();
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", b =>
                {
                    b.Navigation("Moto")
                        .IsRequired();
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Patio", b =>
                {
                    b.Navigation("Setores");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Setor", b =>
                {
                    b.Navigation("Moto")
                        .IsRequired();
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Situacao", b =>
                {
                    b.Navigation("Moto")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
