// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using OsTresMotoqueirosDoApocalipseVerde.Infraestructure;

#nullable disable

namespace OsTresMotoqueirosDoApocalipseVerde.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("DADOS_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence<int>("MODELO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence<int>("MOTO_SEQ")
                .StartsAt(1000L);

            modelBuilder.HasSequence<int>("MOTORISTA_SEQ")
                .StartsAt(1000L);

            modelBuilder.Entity("Dados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_DADOS")
                        .HasDefaultValueSql("DADOS_SEQ.NEXTVAL");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("SENHA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR2(13)")
                        .HasColumnName("TELEFONE");

                    b.HasKey("Id");

                    b.ToTable("DADOS", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MODELO")
                        .HasDefaultValueSql("MODELO_SEQ.NEXTVAL");

                    b.Property<int>("Consumo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CONSUMO");

                    b.Property<string>("Frenagem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FRENAGEM");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("NVARCHAR2(25)")
                        .HasColumnName("NOME_MODELO");

                    b.Property<string>("SistemaPartida")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("SIS_PARTIDA");

                    b.Property<int>("Tanque")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TANQUE");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO_COMBUSTIVEL");

                    b.HasKey("Id");

                    b.ToTable("MODELO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO")
                        .HasDefaultValueSql("MOTO_SEQ.NEXTVAL");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVARCHAR2(17)")
                        .HasColumnName("CHASSI");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("CONDICAO");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("NVARCHAR2(5)")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("NVARCHAR2(5)")
                        .HasColumnName("LONGITUDE");

                    b.Property<int?>("ModeloId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MODELO");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)")
                        .HasColumnName("PLACA");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("MOTO", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTORISTA")
                        .HasDefaultValueSql("MOTORISTA_SEQ.NEXTVAL");

                    b.Property<int?>("DadosId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_DADOS");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PLANO");

                    b.HasKey("Id");

                    b.HasIndex("DadosId");

                    b.ToTable("MOTORISTA", (string)null);
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Moto", b =>
                {
                    b.HasOne("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("OsTresMotoqueirosDoApocalipseVerde.Domain.Entities.Motorista", b =>
                {
                    b.HasOne("Dados", "Dados")
                        .WithMany()
                        .HasForeignKey("DadosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dados");
                });
#pragma warning restore 612, 618
        }
    }
}
